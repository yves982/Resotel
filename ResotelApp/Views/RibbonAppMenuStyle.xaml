<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ResotelApp.Views"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
    <ControlTemplate x:Key="AppRibbonMenuTemplate" TargetType="{x:Type RibbonApplicationMenu}">
        <Grid x:Name="OuterGrid" Focusable="False" SnapsToDevicePixels="True">
            <RibbonToggleButton x:Name="PART_ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SmallImageSource="{TemplateBinding SmallImageSource}" ToolTipDescription="{TemplateBinding ToolTipDescription}" ToolTipFooterDescription="{TemplateBinding ToolTipFooterDescription}" ToolTipImageSource="{TemplateBinding ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding ToolTipFooterTitle}" ToolTipFooterImageSource="{TemplateBinding ToolTipFooterImageSource}" ToolTipTitle="{TemplateBinding ToolTipTitle}" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}">
                <RibbonToggleButton.Style>
                    <Style TargetType="{x:Type RibbonToggleButton}">
                        <Setter Property="BorderBrush" Value="#FF114EAF"/>
                        <Setter Property="Background" Value="#FF114EAF"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <GradientStop Color="LightGray" Offset="0"/>
                                    <GradientStop Color="White" Offset="0.4"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="FocusManager.IsFocusScope" Value="False"/>
                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                        <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
                        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RibbonToggleButton}">
                                    <Grid Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                    <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                    <GradientStop Color="#30FFFFFF" Offset="0.5"/>
                                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                                    <GradientStop Color="#70FFFFFF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border x:Name="InnerBorder" BorderThickness="1" Background="Transparent" CornerRadius="0,2,0,0">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#60FFFFFF" Offset="0"/>
                                                        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                            </Border>
                                        </Border>
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                                            <TextBlock Name="DownArrow" Margin="2,1" Foreground="White" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type RibbonApplicationMenu}}, Path=Label}"></TextBlock>
                                        </StackPanel>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                                <Condition Property="IsChecked" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="MiddleBorder" Value="#80FFFFFF"/>
                                            <Setter Property="Background" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#A0FFFFFF" Offset="0"/>
                                                        <GradientStop Color="#60FFFFFF" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                        <GradientStop Color="#D0FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                                <Condition Property="IsChecked" Value="False"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" TargetName="MiddleBorder" Value="#80FFFFFF"/>
                                            <Setter Property="Background" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#A0FFFFFF" Offset="0"/>
                                                        <GradientStop Color="#60FFFFFF" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                        <GradientStop Color="#D0FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <DataTrigger Binding="{Binding (0)}" Value="True">
                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                            <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                                            <Setter Property="BorderBrush" TargetName="MiddleBorder" Value="Transparent"/>
                                            <Setter Property="Background" TargetName="MiddleBorder" Value="Transparent"/>
                                            <Setter Property="CornerRadius" TargetName="MiddleBorder" Value="0"/>
                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                                            <Setter Property="Background" TargetName="InnerBorder" Value="Transparent"/>
                                            <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0"/>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RibbonToggleButton.Style>
            </RibbonToggleButton>
            <Border x:Name="CenterBorder" HorizontalAlignment="Stretch" Height="1" Margin="-1,-1,0,0" VerticalAlignment="Top"/>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" SnapsToDevicePixels="True">
                <Themes:SystemDropShadowChrome x:Name="Shadow" Color="Transparent" RenderOptions.ClearTypeHint="Enabled" KeyTipService.IsKeyTipScope="True">
                    <Grid>
                        <Border x:Name="PopupBorder" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RibbonMenuButton}}}" BorderThickness="1" Background="{Binding Ribbon.Background, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RibbonMenuButton}}}" CornerRadius="2">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="HeaderBorder" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RibbonMenuButton}}}" BorderThickness="0,0,0,1" Background="Transparent" CornerRadius="2,2,0,0"/>
                                <Border x:Name="HeaderOverlayBorder" BorderBrush="#80FFFFFF" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#A0FFFFFF" Offset="0"/>
                                            <GradientStop Color="#60FFFFFF" Offset="0.5"/>
                                            <GradientStop Color="Transparent" Offset="0.5"/>
                                            <GradientStop Color="#D0FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="2"/>
                                        <ColumnDefinition Width="300"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="MainPaneBorder" Background="#B8FFFFFF">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_SubMenuScrollViewer" CanContentScroll="True" Grid.Row="1" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="BackgroundCanvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=MainPaneBorder}" Height="{Binding ActualHeight, ElementName=MainPaneBorder}" RadiusY="2" RadiusX="2" Width="{Binding ActualWidth, ElementName=MainPaneBorder}"/>
                                                        <Rectangle x:Name="OverlayRect" Fill="{Binding Background, ElementName=MainPaneBorder}" Height="{Binding ActualHeight, ElementName=MainPaneBorder}" RadiusY="2" RadiusX="2" Width="{Binding ActualWidth, ElementName=MainPaneBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" Grid.IsSharedSizeScope="True"/>
                                                </Grid>
                                            </ScrollViewer>
                                            <Border x:Name="ResizeControl" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,1,0,0" Background="#FFE5EFF9" Grid.Row="2" Visibility="Collapsed">
                                                <Thumb x:Name="PART_ResizeThumb">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="Width" Value="11"/>
                                                            <Setter Property="Height" Value="11"/>
                                                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                            <Setter Property="HorizontalAlignment" Value="Right"/>
                                                            <Setter Property="Cursor" Value="SizeNWSE"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Border Background="Transparent">
                                                                            <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                                                                <Path.Fill>
                                                                                    <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                                                        <DrawingBrush.Drawing>
                                                                                            <DrawingGroup>
                                                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                                                                            </DrawingGroup>
                                                                                        </DrawingBrush.Drawing>
                                                                                    </DrawingBrush>
                                                                                </Path.Fill>
                                                                            </Path>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="FlowDirection" Value="RightToLeft">
                                                                    <Setter Property="Cursor" Value="SizeNESW"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="PART_SubmenuPlaceholder" Background="#80FFFFFF" Grid.Column="2" Height="{Binding ActualHeight, ElementName=MainPaneBorder}">
                                        <ContentPresenter x:Name="PART_AuxiliaryPaneContentPresenter" ContentTemplate="{TemplateBinding AuxiliaryPaneContentTemplate}" Content="{TemplateBinding AuxiliaryPaneContent}" ContentSource="AuxiliaryPaneContent"/>
                                    </Border>
                                    <Border x:Name="VerticalBorder" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RibbonMenuButton}}}" BorderThickness="1,0,0,0" Background="White" Grid.Column="1" HorizontalAlignment="Left" Width="2"/>
                                    <Border x:Name="VerticalOverlayBorder" BorderBrush="#80FFFFFF" BorderThickness="1,0,0,0" Background="Transparent" Grid.Column="1" HorizontalAlignment="Left" Width="2"/>
                                </Grid>
                                <Border x:Name="FooterBorder" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RibbonMenuButton}}}" BorderThickness="0,1,0,0" Background="Transparent" CornerRadius="0,0,2,2" Grid.Row="2">
                                    <Border x:Name="FooterBackgroundOverlayBorder" BorderBrush="Transparent" CornerRadius="0,0,2,2">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#A0FFFFFF" Offset="0"/>
                                                <GradientStop Color="#90FFFFFF" Offset="0.2"/>
                                                <GradientStop Color="#80FFFFFF" Offset="0.4"/>
                                                <GradientStop Color="#50FFFFFF" Offset="0.6"/>
                                                <GradientStop Color="Transparent" Offset="0.8"/>
                                                <GradientStop Color="#30FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ContentPresenter x:Name="PART_FooterPaneContentPresenter" ContentTemplate="{TemplateBinding FooterPaneContentTemplate}" Content="{TemplateBinding FooterPaneContent}" ContentSource="FooterPaneContent" Margin="2" MinHeight="12"/>
                                    </Border>
                                </Border>
                                <Border x:Name="FooterOverlayBorder" BorderBrush="#80FFFFFF" BorderThickness="0,1,0,0" Background="Transparent" CornerRadius="0,0,2,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Grid>
                        </Border>
                        <Canvas>
                            <RibbonToggleButton x:Name="PART_PopupToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Focusable="False" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Canvas.Left="3" AutomationProperties.Name="{Binding (AutomationProperties.Name), RelativeSource={RelativeSource TemplatedParent}}" Canvas.Top="-24" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}">
                                <RibbonToggleButton.Style>
                                    <Style TargetType="{x:Type RibbonToggleButton}">
                                        <Setter Property="BorderBrush" Value="#FF114EAF"/>
                                        <Setter Property="Background" Value="#FF114EAF"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Foreground">
                                            <Setter.Value>
                                                <RadialGradientBrush>
                                                    <GradientStop Color="LightGray" Offset="0"/>
                                                    <GradientStop Color="White" Offset="0.4"/>
                                                </RadialGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="ClickMode" Value="Press"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="FocusManager.IsFocusScope" Value="False"/>
                                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                                        <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
                                        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                                        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RibbonToggleButton}">
                                                    <Grid Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,2,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                                    <GradientStop Color="#30FFFFFF" Offset="0.5"/>
                                                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                                                    <GradientStop Color="#70FFFFFF" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border x:Name="InnerBorder" BorderThickness="1" Background="Transparent" CornerRadius="0,2,0,0">
                                                                <Border.BorderBrush>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#60FFFFFF" Offset="0"/>
                                                                        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Border.BorderBrush>
                                                            </Border>
                                                        </Border>
                                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                                                            <Image RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" Height="16" IsHitTestVisible="False" Margin="0,-0.5,0,0" Source="{Binding SmallImageSource, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RibbonApplicationMenu}}}" VerticalAlignment="Center" Width="16"/>
                                                            <Path x:Name="DownArrow" Data="M0,0L2.25,3 4.5,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="3.5,0,0,0" StrokeThickness="0.5" VerticalAlignment="Center">
                                                                <Path.RenderTransform>
                                                                    <ScaleTransform ScaleY="1.5" ScaleX="1.5"/>
                                                                </Path.RenderTransform>
                                                                <Path.Stroke>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                                        <GradientStop Color="#30FFFFFF" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                                        <GradientStop Color="#70FFFFFF" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Path.Stroke>
                                                            </Path>
                                                        </StackPanel>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                                                <Condition Property="IsChecked" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="BorderBrush" TargetName="MiddleBorder" Value="#80FFFFFF"/>
                                                            <Setter Property="Background" TargetName="MiddleBorder">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#A0FFFFFF" Offset="0"/>
                                                                        <GradientStop Color="#60FFFFFF" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                                        <GradientStop Color="#D0FFFFFF" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                                        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="IsChecked" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="BorderBrush" TargetName="MiddleBorder" Value="#80FFFFFF"/>
                                                            <Setter Property="Background" TargetName="MiddleBorder">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#A0FFFFFF" Offset="0"/>
                                                                        <GradientStop Color="#60FFFFFF" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                                        <GradientStop Color="#D0FFFFFF" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                        <GradientStop Color="#90FFFFFF" Offset="0"/>
                                                                        <GradientStop Color="#20FFFFFF" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                                        <GradientStop Color="Transparent" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </MultiTrigger>
                                                        <DataTrigger Binding="{Binding (0)}" Value="True">
                                                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                            <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                                                            <Setter Property="BorderBrush" TargetName="MiddleBorder" Value="Transparent"/>
                                                            <Setter Property="Background" TargetName="MiddleBorder" Value="Transparent"/>
                                                            <Setter Property="CornerRadius" TargetName="MiddleBorder" Value="0"/>
                                                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent"/>
                                                            <Setter Property="Background" TargetName="InnerBorder" Value="Transparent"/>
                                                            <Setter Property="CornerRadius" TargetName="InnerBorder" Value="0"/>
                                                            <Setter Property="Stroke" TargetName="DownArrow" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                            <Setter Property="Fill" TargetName="DownArrow" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RibbonToggleButton.Style>
                            </RibbonToggleButton>
                        </Canvas>
                    </Grid>
                </Themes:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="CanContentScroll" SourceName="PART_SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=PART_SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=PART_SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Top" TargetName="OverlayRect" Value="{Binding VerticalOffset, ElementName=PART_SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OverlayRect" Value="{Binding HorizontalOffset, ElementName=PART_SubMenuScrollViewer}"/>
            </Trigger>
            <Trigger Property="HasGallery" Value="True">
                <Setter Property="HorizontalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer" Value="Disabled"/>
                <Setter Property="VerticalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer" Value="Disabled"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanUserResizeHorizontally" Value="True"/>
                    <Condition Property="CanUserResizeVertically" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="ResizeControl" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="CanUserResizeHorizontally" Value="False"/>
                    <Condition Property="CanUserResizeVertically" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="ResizeControl" Value="Visible"/>
                <Setter Property="Style" TargetName="PART_ResizeThumb">
                    <Setter.Value>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="Height" Value="11"/>
                            <Setter Property="Cursor" Value="SizeNS"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border Background="Transparent">
                                            <Path HorizontalAlignment="Center" Margin="0,0,2,2" VerticalAlignment="Bottom">
                                                <Path.Data>
                                                    <RectangleGeometry Rect="0,0,11,3"/>
                                                </Path.Data>
                                                <Path.Fill>
                                                    <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Path.Fill>
                                            </Path>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="IsDropDownPositionedAbove" Value="True">
                <Setter Property="Grid.Row" TargetName="ResizeControl" Value="0"/>
                <Setter Property="BorderThickness" TargetName="ResizeControl" Value="0,0,0,1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDropDownPositionedAbove" Value="True"/>
                    <Condition Property="CanUserResizeHorizontally" Value="True"/>
                    <Condition Property="CanUserResizeVertically" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Style" TargetName="PART_ResizeThumb">
                    <Setter.Value>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="Width" Value="11"/>
                            <Setter Property="Height" Value="11"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Cursor" Value="SizeNESW"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border Background="Transparent">
                                            <Path Data="M0,0L0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0z" Margin="0,2,2,0">
                                                <Path.Fill>
                                                    <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Path.Fill>
                                            </Path>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="FlowDirection" Value="RightToLeft">
                                    <Setter Property="Cursor" Value="SizeNWSE"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                <Setter Property="Margin" TargetName="Shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="IsOpen" SourceName="PART_Popup" Value="False">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <DataTrigger Binding="{Binding (0)}" Value="True">
                <Setter Property="Visibility" TargetName="BackgroundCanvas" Value="Collapsed"/>
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                <Setter Property="Color" TargetName="Shadow" Value="Transparent"/>
                <Setter Property="TextElement.Foreground" TargetName="OuterGrid" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="PopupBorder" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" TargetName="PopupBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="CornerRadius" TargetName="PopupBorder" Value="0"/>
                <Setter Property="BorderBrush" TargetName="HeaderBorder" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="CornerRadius" TargetName="HeaderBorder" Value="0"/>
                <Setter Property="BorderBrush" TargetName="HeaderOverlayBorder" Value="Transparent"/>
                <Setter Property="Background" TargetName="HeaderOverlayBorder" Value="Transparent"/>
                <Setter Property="CornerRadius" TargetName="HeaderOverlayBorder" Value="0"/>
                <Setter Property="Background" TargetName="MainPaneBorder" Value="Transparent"/>
                <Setter Property="Background" TargetName="PART_SubmenuPlaceholder" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="VerticalBorder" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                <Setter Property="Background" TargetName="VerticalBorder" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="VerticalOverlayBorder" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="FooterBorder" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="CornerRadius" TargetName="FooterBorder" Value="0"/>
                <Setter Property="BorderBrush" TargetName="FooterOverlayBorder" Value="Transparent"/>
                <Setter Property="CornerRadius" TargetName="FooterOverlayBorder" Value="0"/>
                <Setter Property="Background" TargetName="FooterBackgroundOverlayBorder" Value="Transparent"/>
                <Setter Property="CornerRadius" TargetName="FooterBackgroundOverlayBorder" Value="0"/>
                <Setter Property="BorderBrush" TargetName="ResizeControl" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" TargetName="ResizeControl" Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>