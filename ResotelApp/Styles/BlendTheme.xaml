<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ResotelApp.Views">
    <!-- 
    Defines the following keys: (* => intended for external use)
       * CustomTabControlStyle
       * CustomTabItemStyle
       * CustomTextStyle
       * CustomStackPanelStyle
       * MainWindowBackground
       * CustomPageBorderStyle
       * CustomButtonStyle
       PressedBorderBrush
       CustomTabButtonStyle
    -->
    
    <!-- 
        TabControlStyle : Gives a LightSteelBlue border with a 4 pixels offset on the right, and rounded corners to separate the tab bar from next siblings
    -->
    <Style TargetType="{x:Type TabControl}" x:Key="CustomTabControlStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel
                            Orientation="Horizontal"
                            Name="HeaderPanel"
                            Grid.Row="0"
                            Panel.ZIndex="1"
                            Margin="0,0,4,-1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"
                            Background="Transparent"
                         />
                        <Border
                            Name="Border"
                            Grid.Row="1"
                            Background="LightSteelBlue"          
                            CornerRadius="2"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                        >
                            <ContentPresenter
                               Name="PART_SelectedContentHost"
                               Margin="4,4,4,0"
                               ContentSource="SelectedContent"
                            />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Draws a cross for out close button and make it react to mouse over / mouse click
    -->
    <Style TargetType="{x:Type Button}" x:Key="CustomTabButtonStyle">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path
                             x:Name="Cross"
                             Data="M0,0L6,6 M6,0L0,6z"
                             Stroke="LightGray"           
                             StrokeThickness="1.7"
                        />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Cross" Property="Stroke" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Cross" Property="Stroke" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--
        TabItemStyle : Draws a "slash" at the end of out item and adjust content accordingly
    -->
    <Style TargetType="{x:Type TabItem}" x:Key="CustomTabItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Margin="0,0,-12,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="24"/>
                        </Grid.ColumnDefinitions>
                        <Border
                             x:Name="Border"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             CornerRadius="3,0,0,0"    
                             Background="#FF333333" 
                        />
                        <Path
                             x:Name="RoundedCorner"
                             Grid.Column="2"
                             Stretch="Fill"
                             Data="M6.5,2.6C4.767,0.973 2.509,0 0,0 0,0 0,19 0,19L23,19z"
                             Fill="#FF333333"
                        />
                        <Button
                             x:Name="CloseButton"
                             Grid.Column="1"
                             Visibility="Collapsed"
                             Margin="0,0,0,0"
                             Width="6"
                             Height="6"
                             Style="{StaticResource CustomTabButtonStyle}"
                        />
                        <ContentPresenter               
                         x:Name="ContentSite"
                         TextElement.Foreground="White"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         ContentSource="Header"
                         Margin="12,2,12,2"
                         RecognizesAccessKey="True"
                        />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                            <Setter TargetName="RoundedCorner" Property="Fill" Value="Gray" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="RoundedCorner" Property="Fill" Value="#EEEEEE" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--
        Add an underline effect to the text
    -->
    <Style TargetType="{x:Type TextBlock}" x:Key="CustomTextStyle">
        <Setter Property="TextDecorations">
            <Setter.Value>
                <TextDecorationCollection>
                    <TextDecoration PenOffset="3">
                        <TextDecoration.Pen>
                            <Pen Brush="LightSteelBlue" />
                        </TextDecoration.Pen>
                    </TextDecoration>
                </TextDecorationCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="18" />
    </Style>

    <!--
        Add spaces around labels and textbox to create a grid effect
    -->
    <Style TargetType="{x:Type StackPanel}" x:Key="CustomStackPanelStyle">
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Margin" Value="0,0,5,0" />
                <Setter Property="MinWidth" Value="85" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="0,0,5,0" />
                <Setter Property="MinWidth" Value="250" />
            </Style>
            <Style TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Margin" Value="0,8,0,0" />
            </Style>
        </Style.Resources>
    </Style>

    <!--
        MainWindow's background
    -->
    <SolidColorBrush x:Key="MainWindowBackground">LightGray</SolidColorBrush>
    <!--
        UserControl's Border
    -->
    <Style TargetType="{x:Type Border}" x:Key="CustomPageBorderStyle">
        <Setter Property="BorderThickness" Value="0.4" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="BorderBrush" Value="WhiteSmoke" />
        <Setter Property="Margin" Value="0,4,0,0" />
    </Style>
    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFDAF3F5" Offset="1" />
                <GradientStop Color="#FFCDE0F7" Offset="0.64" />
                <GradientStop Color="#FFC2D3E9" Offset="0.31" />
                <GradientStop Color="#FFB0C4DE" Offset="0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--
        A flat style for buttons
    -->
    <Style TargetType="{x:Type Button}" x:Key="CustomButtonStyle">
        <Setter Property="Background" Value="#FFC2D3E9" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" CornerRadius="4" Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource PressedBorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>